Archive member included because of file (symbol)

/opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                              rmi_example.o (xprintf)
/opt/pic32mx/lib/libm.a(cos32.o)
                              rmi-mr32.o (cos)
/opt/pic32mx/lib/libm.a(sin32.o)
                              rmi-mr32.o (sin)
/opt/pic32mx/lib/libm.a(reduct32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (reduct)
/opt/pic32mx/lib/libm.a(sincos32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sincon)
/opt/pic32mx/lib/libm.a(func32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sigmax)
/opt/pic32mx/lib/libm.a(dp32.o)
                              rmi-mr32.o (__subdf3)
/opt/pic32mx/lib/libc.a(exit.o)
                              rmi-mr32.o (exit)
/opt/pic32mx/lib/libc.a(stdclean.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_cleanup)
/opt/pic32mx/lib/libc.a(_exit.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_exit)
/opt/pic32mx/lib/libc.a(_iob.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (_iob)
/opt/pic32mx/lib/libc.a(fclose.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (fclose)
/opt/pic32mx/lib/libc.a(fflush.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (fflush)
/opt/pic32mx/lib/libc.a(buf.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_buffree)
/opt/pic32mx/lib/libc.a(errno.o)
                              /opt/pic32mx/lib/libc.a(buf.o) (errno)
/opt/pic32mx/lib/libc.a(tfiles.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_tfilesptr)
/opt/pic32mx/lib/libc.a(sbrk.o)
                              /opt/pic32mx/lib/libc.a(buf.o) (sbrk)
/opt/pic32mx/lib/libc.a(write.o)
                              /opt/pic32mx/lib/libc.a(fflush.o) (write)
/opt/pic32mx/lib/libc.a(remove.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (remove)
/opt/pic32mx/lib/libc.a(close.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (close)
/opt/pic32mx/lib/libc.a(memset.o)
                              /opt/pic32mx/lib/libc.a(sbrk.o) (memset)
/opt/pic32mx/lib/libc.a(_mon_putc.o)
                              /opt/pic32mx/lib/libc.a(write.o) (_mon_putc)
/opt/pic32mx/lib/libc.a(c32_uart.o)
                              /opt/pic32mx/lib/libc.a(_mon_putc.o) (__C32_UART)

Allocating common symbols
Common symbol       size              file

_atexitptr          0x4               /opt/pic32mx/lib/libc.a(stdclean.o)
errno               0x4               /opt/pic32mx/lib/libc.a(errno.o)
tick80ms            0x4               rmi-mr32.o
_sibuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)
tick20ms            0x4               rmi-mr32.o
_outdone            0x1               /opt/pic32mx/lib/libc.a(_iob.o)
tick40ms            0x4               rmi-mr32.o
tick160ms           0x4               rmi-mr32.o
_tfilesptr          0x4               /opt/pic32mx/lib/libc.a(tfiles.o)
analogSensors       0x18              rmi-mr32.o
tick10ms            0x4               rmi-mr32.o
_sobuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)

Microchip PIC32 Memory-Usage Report

kseg0 Program-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.text                   0x9d001400         0x40f4       16628  Application's executable code 
.rodata                 0x9d0054f8          0x1ac         428  Read-only constant data 
.data                   0x9d0056a4          0x128         296  Data-initialization template 
.sdata                  0x9d0057cc           0x10          16  Small data-initialization template 
      Total kseg0_program_mem used  :      0x43d8       17368  3.3% of 0x7ec00

kseg0 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.startup                0x9d001000          0x2b0         688  C startup code 
         Total kseg0_boot_mem used  :       0x2b0         688  68.3% of 0x3f0

Exception-Memory Usage 
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.app_excpt              0x9d000180           0x14          20  General-Exception handler 
.vector_7               0x9d0002e0            0x8           8  Interrupt Vector 7 
.vector_8               0x9d000300            0x8           8  Interrupt Vector 8 
.vector_19              0x9d000460            0x8           8  Interrupt Vector 19 
          Total exception_mem used  :        0x2c          44  1.1% of 0x1000

kseg1 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
         Total kseg1_boot_mem used  :           0           0  <1% of 0x490
        --------------------------------------------------------------------------
         Total Program Memory used  :      0x46b4       18100  3.4% of 0x80480
        --------------------------------------------------------------------------


kseg1 Data-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.data                   0xa0000000          0x128         296  Initialized data 
.sdata                  0xa0000128           0x10          16  Small initialized data 
.sbss                   0xa0000138           0xc4         196  Small uninitialized data 
.bss                    0xa00001fc          0x170         368  Uninitialized data 
.stack                  0xa0000370         0x2000        8192  Minimum space reserved for stack 
         Total kseg1_data_mem used  :      0x236c        9068  6.9% of 0x20000
        --------------------------------------------------------------------------
            Total Data Memory used  :      0x236c        9068  6.9% of 0x20000
        --------------------------------------------------------------------------

Memory Configuration

Name             Origin             Length             Attributes
kseg0_program_mem 0x9d001400         0x0007ec00         xr
kseg0_boot_mem   0x9d001000         0x000003f0
exception_mem    0x9d000000         0x00001000
kseg1_boot_mem   0xbfc00000         0x00000490
debug_exec_mem   0xbfc02000         0x00000ff0
config3          0xbfc02ff0         0x00000004
config2          0xbfc02ff4         0x00000004
config1          0xbfc02ff8         0x00000004
config0          0xbfc02ffc         0x00000004
kseg1_data_mem   0xa0000000         0x00020000         w !x
sfrs             0xbf800000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD rmi_example.o
LOAD rmi-mr32.o
LOAD /opt/pic32mx/lib/libdetpic32.a
LOAD /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a
LOAD /opt/pic32mx/lib/libm.a
LOAD /opt/pic32mx/lib/libc.a
LOAD /opt/pic32mx/lib/libsupc++.a
LOAD /opt/pic32mx/lib/libxcpp.a
                0x00000400                PROVIDE (_min_stack_size, 0x400)
                0x00000000                PROVIDE (_min_heap_size, 0x0)
LOAD /opt/pic32mx/lib/startup.o
                0x00000001                PROVIDE (_vector_spacing, 0x1)
                0x9d000000                _ebase_address = 0x9d000000
                0x00000001                _vector_spacing = 0x1
                0x9d001800                _reset = 0x9d001800
                0x00002000                _min_stack_size = 0x2000
                0x00000000                _min_heap_size = 0x0
                0xbfc00000                _RESET_ADDR = 0xbfc00000
                0xbfc00380                _BEV_EXCPT_ADDR = 0xbfc00380
                0xbfc00480                _DBG_EXCPT_ADDR = 0xbfc00480
                0xbfc02000                _DBG_CODE_ADDR = 0xbfc02000
                0x9d000180                _GEN_EXCPT_ADDR = (_ebase_address + 0x180)

.config_BFC02FF0
 *(.config_BFC02FF0)

.config_BFC02FF4
 *(.config_BFC02FF4)

.config_BFC02FF8
 *(.config_BFC02FF8)

.config_BFC02FFC
 *(.config_BFC02FFC)

.startup        0x9d001000      0x2b0
 *(.startup)
 .startup       0x9d001000      0x2b0 /opt/pic32mx/lib/startup.o
                0x9d001000                startup
 *(.startup)

.reset
 *(.reset)

.bev_excpt
 *(.bev_handler)

.dbg_excpt      0xbfc00480        0x0
                0xbfc00480                . = (. + DEFINED (_DEBUGGER)?0x8:0x0)

.dbg_code       0xbfc02000        0x0
                0xbfc02000                . = (. + DEFINED (_DEBUGGER)?0xff0:0x0)

.app_excpt      0x9d000180       0x14
 *(.gen_handler)
 .gen_handler   0x9d000180       0x14 /opt/pic32mx/lib/startup.o

.vector_0       0x9d000200        0x0
 *(.vector_0)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_0) <= (_vector_spacing << 0x5))), function at exception vector 0 too large)

.vector_1       0x9d000220        0x0
 *(.vector_1)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_1) <= (_vector_spacing << 0x5))), function at exception vector 1 too large)

.vector_2       0x9d000240        0x0
 *(.vector_2)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_2) <= (_vector_spacing << 0x5))), function at exception vector 2 too large)

.vector_3       0x9d000260        0x0
 *(.vector_3)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_3) <= (_vector_spacing << 0x5))), function at exception vector 3 too large)

.vector_4       0x9d000280        0x0
 *(.vector_4)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_4) <= (_vector_spacing << 0x5))), function at exception vector 4 too large)

.vector_5       0x9d0002a0        0x0
 *(.vector_5)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_5) <= (_vector_spacing << 0x5))), function at exception vector 5 too large)

.vector_6       0x9d0002c0        0x0
 *(.vector_6)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_6) <= (_vector_spacing << 0x5))), function at exception vector 6 too large)

.vector_7       0x9d0002e0        0x8
 *(.vector_7)
 .vector_7      0x9d0002e0        0x8 rmi-mr32.o
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_7) <= (_vector_spacing << 0x5))), function at exception vector 7 too large)

.vector_8       0x9d000300        0x8
 *(.vector_8)
 .vector_8      0x9d000300        0x8 rmi-mr32.o
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_8) <= (_vector_spacing << 0x5))), function at exception vector 8 too large)

.vector_9       0x9d000320        0x0
 *(.vector_9)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_9) <= (_vector_spacing << 0x5))), function at exception vector 9 too large)

.vector_10      0x9d000340        0x0
 *(.vector_10)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_10) <= (_vector_spacing << 0x5))), function at exception vector 10 too large)

.vector_11      0x9d000360        0x0
 *(.vector_11)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_11) <= (_vector_spacing << 0x5))), function at exception vector 11 too large)

.vector_12      0x9d000380        0x0
 *(.vector_12)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_12) <= (_vector_spacing << 0x5))), function at exception vector 12 too large)

.vector_13      0x9d0003a0        0x0
 *(.vector_13)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_13) <= (_vector_spacing << 0x5))), function at exception vector 13 too large)

.vector_14      0x9d0003c0        0x0
 *(.vector_14)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_14) <= (_vector_spacing << 0x5))), function at exception vector 14 too large)

.vector_15      0x9d0003e0        0x0
 *(.vector_15)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_15) <= (_vector_spacing << 0x5))), function at exception vector 15 too large)

.vector_16      0x9d000400        0x0
 *(.vector_16)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_16) <= (_vector_spacing << 0x5))), function at exception vector 16 too large)

.vector_17      0x9d000420        0x0
 *(.vector_17)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_17) <= (_vector_spacing << 0x5))), function at exception vector 17 too large)

.vector_18      0x9d000440        0x0
 *(.vector_18)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_18) <= (_vector_spacing << 0x5))), function at exception vector 18 too large)

.vector_19      0x9d000460        0x8
 *(.vector_19)
 .vector_19     0x9d000460        0x8 rmi-mr32.o
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_19) <= (_vector_spacing << 0x5))), function at exception vector 19 too large)

.vector_20      0x9d000480        0x0
 *(.vector_20)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_20) <= (_vector_spacing << 0x5))), function at exception vector 20 too large)

.vector_21      0x9d0004a0        0x0
 *(.vector_21)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_21) <= (_vector_spacing << 0x5))), function at exception vector 21 too large)

.vector_22      0x9d0004c0        0x0
 *(.vector_22)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_22) <= (_vector_spacing << 0x5))), function at exception vector 22 too large)

.vector_23      0x9d0004e0        0x0
 *(.vector_23)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_23) <= (_vector_spacing << 0x5))), function at exception vector 23 too large)

.vector_24      0x9d000500        0x0
 *(.vector_24)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_24) <= (_vector_spacing << 0x5))), function at exception vector 24 too large)

.vector_25      0x9d000520        0x0
 *(.vector_25)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_25) <= (_vector_spacing << 0x5))), function at exception vector 25 too large)

.vector_26      0x9d000540        0x0
 *(.vector_26)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_26) <= (_vector_spacing << 0x5))), function at exception vector 26 too large)

.vector_27      0x9d000560        0x0
 *(.vector_27)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_27) <= (_vector_spacing << 0x5))), function at exception vector 27 too large)

.vector_28      0x9d000580        0x0
 *(.vector_28)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_28) <= (_vector_spacing << 0x5))), function at exception vector 28 too large)

.vector_29      0x9d0005a0        0x0
 *(.vector_29)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_29) <= (_vector_spacing << 0x5))), function at exception vector 29 too large)

.vector_30      0x9d0005c0        0x0
 *(.vector_30)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_30) <= (_vector_spacing << 0x5))), function at exception vector 30 too large)

.vector_31      0x9d0005e0        0x0
 *(.vector_31)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_31) <= (_vector_spacing << 0x5))), function at exception vector 31 too large)

.vector_32      0x9d000600        0x0
 *(.vector_32)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_32) <= (_vector_spacing << 0x5))), function at exception vector 32 too large)

.vector_33      0x9d000620        0x0
 *(.vector_33)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_33) <= (_vector_spacing << 0x5))), function at exception vector 33 too large)

.vector_34      0x9d000640        0x0
 *(.vector_34)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_34) <= (_vector_spacing << 0x5))), function at exception vector 34 too large)

.vector_35      0x9d000660        0x0
 *(.vector_35)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_35) <= (_vector_spacing << 0x5))), function at exception vector 35 too large)

.vector_36      0x9d000680        0x0
 *(.vector_36)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_36) <= (_vector_spacing << 0x5))), function at exception vector 36 too large)

.vector_37      0x9d0006a0        0x0
 *(.vector_37)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_37) <= (_vector_spacing << 0x5))), function at exception vector 37 too large)

.vector_38      0x9d0006c0        0x0
 *(.vector_38)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_38) <= (_vector_spacing << 0x5))), function at exception vector 38 too large)

.vector_39      0x9d0006e0        0x0
 *(.vector_39)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_39) <= (_vector_spacing << 0x5))), function at exception vector 39 too large)

.vector_40      0x9d000700        0x0
 *(.vector_40)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_40) <= (_vector_spacing << 0x5))), function at exception vector 40 too large)

.vector_41      0x9d000720        0x0
 *(.vector_41)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_41) <= (_vector_spacing << 0x5))), function at exception vector 41 too large)

.vector_42      0x9d000740        0x0
 *(.vector_42)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_42) <= (_vector_spacing << 0x5))), function at exception vector 42 too large)

.vector_43      0x9d000760        0x0
 *(.vector_43)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_43) <= (_vector_spacing << 0x5))), function at exception vector 43 too large)

.vector_44      0x9d000780        0x0
 *(.vector_44)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_44) <= (_vector_spacing << 0x5))), function at exception vector 44 too large)

.vector_45      0x9d0007a0        0x0
 *(.vector_45)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_45) <= (_vector_spacing << 0x5))), function at exception vector 45 too large)

.vector_46      0x9d0007c0        0x0
 *(.vector_46)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_46) <= (_vector_spacing << 0x5))), function at exception vector 46 too large)

.vector_47      0x9d0007e0        0x0
 *(.vector_47)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_47) <= (_vector_spacing << 0x5))), function at exception vector 47 too large)

.vector_48      0x9d000800        0x0
 *(.vector_48)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_48) <= (_vector_spacing << 0x5))), function at exception vector 48 too large)

.vector_49      0x9d000820        0x0
 *(.vector_49)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_49) <= (_vector_spacing << 0x5))), function at exception vector 49 too large)

.vector_50      0x9d000840        0x0
 *(.vector_50)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_50) <= (_vector_spacing << 0x5))), function at exception vector 50 too large)

.vector_51      0x9d000860        0x0
 *(.vector_51)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_51) <= (_vector_spacing << 0x5))), function at exception vector 51 too large)

.vector_52      0x9d000880        0x0
 *(.vector_52)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_52) <= (_vector_spacing << 0x5))), function at exception vector 52 too large)

.vector_53      0x9d0008a0        0x0
 *(.vector_53)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_53) <= (_vector_spacing << 0x5))), function at exception vector 53 too large)

.vector_54      0x9d0008c0        0x0
 *(.vector_54)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_54) <= (_vector_spacing << 0x5))), function at exception vector 54 too large)

.vector_55      0x9d0008e0        0x0
 *(.vector_55)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_55) <= (_vector_spacing << 0x5))), function at exception vector 55 too large)

.vector_56      0x9d000900        0x0
 *(.vector_56)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_56) <= (_vector_spacing << 0x5))), function at exception vector 56 too large)

.vector_57      0x9d000920        0x0
 *(.vector_57)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_57) <= (_vector_spacing << 0x5))), function at exception vector 57 too large)

.vector_58      0x9d000940        0x0
 *(.vector_58)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_58) <= (_vector_spacing << 0x5))), function at exception vector 58 too large)

.vector_59      0x9d000960        0x0
 *(.vector_59)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_59) <= (_vector_spacing << 0x5))), function at exception vector 59 too large)

.vector_60      0x9d000980        0x0
 *(.vector_60)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_60) <= (_vector_spacing << 0x5))), function at exception vector 60 too large)

.vector_61      0x9d0009a0        0x0
 *(.vector_61)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_61) <= (_vector_spacing << 0x5))), function at exception vector 61 too large)

.vector_62      0x9d0009c0        0x0
 *(.vector_62)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_62) <= (_vector_spacing << 0x5))), function at exception vector 62 too large)

.vector_63      0x9d0009e0        0x0
 *(.vector_63)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_63) <= (_vector_spacing << 0x5))), function at exception vector 63 too large)

.text           0x9d001400     0x40f4
                0x9d001400                _text_begin = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x9d001400      0x148 rmi_example.o
                0x9d001400                main
 .text          0x9d001548     0x11fc rmi-mr32.o
                0x9d001f80                normalizeAngle
                0x9d001edc                pid
                0x9d0025ac                isr_enc_left
                0x9d001548                setServoPos
                0x9d002664                isr_enc_right
                0x9d001690                readAnalogSensors
                0x9d001bd0                getRobotPos
                0x9d0015ec                updateBatteryVoltage
                0x9d002734                __gxx_personality_v0
                0x9d0023a8                isr_t2
                0x9d001c04                led
                0x9d001cb0                setSP2
                0x9d001c60                leds
                0x9d002368                wait
                0x9d001794                initPIC32
                0x9d001d38                readEncoders
                0x9d002254                delay
                0x9d001d00                setVel2
                0x9d001ca4                batteryVoltage
                0x9d001cec                setPWM2
                0x9d002068                updateLocalization
                0x9d001d64                actuateMotors
                0x9d0022a0                readLineSensors
                0x9d001d30                closedLoopControl
                0x9d001c80                obstacleSensor
 .text          0x9d002744      0x994 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                0x9d00274c                xprintf
 .text          0x9d0030d8      0x1a0 /opt/pic32mx/lib/libm.a(cos32.o)
                0x9d0030d8                cos
                0x9d0030d8                dpcos
 .text          0x9d003278      0x198 /opt/pic32mx/lib/libm.a(sin32.o)
                0x9d003278                dpsin
                0x9d003278                sin
 .text          0x9d003410      0x1b4 /opt/pic32mx/lib/libm.a(reduct32.o)
                0x9d003410                reduct
 .text          0x9d0035c4      0x5d4 /opt/pic32mx/lib/libm.a(func32.o)
                0x9d003798                exadd
                0x9d0036cc                exmul
                0x9d0035c4                sigmax
                0x9d003934                exdiv
                0x9d003884                exsub
 .text          0x9d003b98     0x1128 /opt/pic32mx/lib/libm.a(dp32.o)
                0x9d004c48                fabs
                0x9d004b0c                __eqdf2
                0x9d004b0c                __gtdf2
                0x9d003b98                dpsub
                0x9d0047a0                __floatsidf
                0x9d004b0c                __ltdf2
                0x9d004814                ultodp
                0x9d003fc4                dpmul
                0x9d004908                dptofp
                0x9d004a88                __fixunsdfsi
                0x9d004b0c                dpcmp
                0x9d004864                __extendsfdf2
                0x9d003ba0                __adddf3
                0x9d004a88                dptoul
                0x9d0042ec                dpdiv
                0x9d0047a0                litodp
                0x9d004a00                __fixdfsi
                0x9d004b0c                __ledf2
                0x9d004864                fptodp
                0x9d004c30                __negdf2
                0x9d003ba0                dpadd
                0x9d0042ec                __divdf3
                0x9d003fc4                __muldf3
                0x9d004908                __truncdfsf2
                0x9d004b0c                __nedf2
                0x9d004a00                dptoli
                0x9d004c64                nan
                0x9d004c48                dpfabs
                0x9d004b0c                __gedf2
                0x9d004c64                dpnan
                0x9d003b98                __subdf3
 .text.exit     0x9d004cc0       0x1c /opt/pic32mx/lib/libc.a(exit.o)
                0x9d004cc0                exit
 .text._cleanup
                0x9d004cdc       0x60 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x9d004cdc                _cleanup
 .text._exit    0x9d004d3c        0x8 /opt/pic32mx/lib/libc.a(_exit.o)
                0x9d004d3c                _exit
 .text.fclose   0x9d004d44      0x114 /opt/pic32mx/lib/libc.a(fclose.o)
                0x9d004d44                fclose
 .text.fflush   0x9d004e58       0xc4 /opt/pic32mx/lib/libc.a(fflush.o)
                0x9d004e58                fflush
 .text._bufallo
                0x9d004f1c       0x58 /opt/pic32mx/lib/libc.a(buf.o)
                0x9d004f1c                _bufallo
 .text._buffree
                0x9d004f74       0x10 /opt/pic32mx/lib/libc.a(buf.o)
                0x9d004f74                _buffree
 .text.getpagesize
                0x9d004f84        0x8 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x9d004f84                getpagesize
 .text._stub_sbd_memlayout
                0x9d004f8c       0x2c /opt/pic32mx/lib/libc.a(sbrk.o)
                0x9d004f8c                _stub_sbd_memlayout
                0x9d004f8c                _sbd_memlayout
 .text._sbrk_init
                0x9d004fb8      0x158 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x9d004fb8                _sbrk_init
 .text._sbrk    0x9d005110       0xbc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x9d005110                _sbrk
 .text.sbrk     0x9d0051cc       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x9d0051cc                sbrk
 .text.write    0x9d005240       0xa8 /opt/pic32mx/lib/libc.a(write.o)
                0x9d005240                write
 .text.remove   0x9d0052e8        0x8 /opt/pic32mx/lib/libc.a(remove.o)
                0x9d0052e8                remove
 .text.close    0x9d0052f0        0x8 /opt/pic32mx/lib/libc.a(close.o)
                0x9d0052f0                close
 .text          0x9d0052f8       0xa8 /opt/pic32mx/lib/libc.a(memset.o)
                0x9d0052f8                memset
 .text._mon_putc
                0x9d0053a0       0xa4 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                0x9d0053a0                _mon_putc
 .text          0x9d005444       0xb0 /opt/pic32mx/lib/startup.o
                0x9d0054b4                printStr
                0x9d005494                printInt
                0x9d005474                readInt
                0x9d0054ec                resetCoreTimer
                0x9d005464                putChar
                0x9d0054c4                readStr
                0x9d0054d4                exxt
                0x9d0054a4                printInt10
                0x9d005444                inkey
                0x9d005454                getChar
                0x9d005484                readInt10
                0x9d0054e4                readCoreTimer
 *(.text.*personality*)
 *(.gnu.warning)
 *(.mips16.fn.*)
 *(.mips16.call.*)
                0x9d0054f4                _text_end = .

.rodata         0x9d0054f8      0x1ac
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.4
                0x9d0054f8       0x8e rmi_example.o
                                 0x90 (size before relaxing)
 *fill*         0x9d005586        0x2 00
 .rodata        0x9d005588       0x10 rmi-mr32.o
                0x9d00558c                KI_num
                0x9d005594                KP_num
                0x9d005588                KI_den
                0x9d005590                KP_den
 .rodata.cst8   0x9d005598       0x38 rmi-mr32.o
 .rodata.str1.4
                0x9d0055d0       0x11 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                                 0x14 (size before relaxing)
 *fill*         0x9d0055e1        0x7 00
 .rodata.cst8   0x9d0055e8       0x20 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                                 0x28 (size before relaxing)
 .rodata        0x9d005608       0x84 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .rodata        0x9d00568c       0x15 /opt/pic32mx/lib/startup.o
 *(.rodata1)
                0x9d0056a4                . = ALIGN (0x4)
 *fill*         0x9d0056a1        0x3 00

.sdata2         0x9d0056a4        0x0
 *(.sdata2 .sdata2.* .gnu.linkonce.s2.*)
                0x9d0056a4                . = ALIGN (0x4)

.sbss2          0x9d0056a4        0x0
 *(.sbss2 .sbss2.* .gnu.linkonce.sb2.*)
                0x9d0056a4                . = ALIGN (0x4)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.dbg_data       0xa0000000        0x0
                0xa0000000                . = (. + DEFINED (_DEBUGGER)?0x200:0x0)

.data           0xa0000000      0x128 load address 0x9d0056a4
                0xa0000000                _data_begin = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0xa0000000       0x18 rmi-mr32.o
 .data          0xa0000018       0x70 /opt/pic32mx/lib/libm.a(sincos32.o)
                0xa0000018                sincon
                0xa0000050                coscon
 .data          0xa0000088       0xa0 /opt/pic32mx/lib/libc.a(_iob.o)
                0xa0000088                _iob
 *(.gnu.linkonce.d.*personality*)
 *(.data1)
                0x9d0056a4                _data_image_begin = LOADADDR (.data)

.eh_frame
 *(.eh_frame)
                0xa0008120                _gp = (ALIGN (0x10) + 0x7ff0)

.got
 *(.got.plt)
 *(.got)

.sdata          0xa0000128       0x10 load address 0x9d0057cc
                0xa0000128                _sdata_begin = .
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0xa0000128        0x8 rmi-mr32.o
                0xa0000128                SERVO_WIDTH_MAX
                0xa000012c                SERVO_WIDTH_MIN
 .sdata         0xa0000130        0x4 /opt/pic32mx/lib/libc.a(_iob.o)
                0xa0000130                _Files
 .sdata         0xa0000134        0x4 /opt/pic32mx/lib/libc.a(c32_uart.o)
                0xa0000134                __C32_UART
                0xa0000138                _sdata_end = .

.lit8
 *(.lit8)

.lit4
 *(.lit4)
                0xa0000138                . = ALIGN (0x4)
                0xa0000138                _data_end = .
                0xa0000138                _bss_begin = .

.sbss           0xa0000138       0xc4
                0xa0000138                _sbss_begin = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0xa0000138       0x90 rmi-mr32.o
 .sbss          0xa00001c8        0x4 /opt/pic32mx/lib/libc.a(buf.o)
 .sbss          0xa00001cc        0xc /opt/pic32mx/lib/libc.a(sbrk.o)
                0xa00001d0                _minbrk
                0xa00001cc                _maxbrk
 *(.scommon)
 .scommon       0xa00001d8       0x14 rmi-mr32.o
                0xa00001d8                tick80ms
                0xa00001dc                tick20ms
                0xa00001e0                tick40ms
                0xa00001e4                tick160ms
                0xa00001e8                tick10ms
 .scommon       0xa00001ec        0x4 /opt/pic32mx/lib/libc.a(stdclean.o)
                0xa00001ec                _atexitptr
 .scommon       0xa00001f0        0x1 /opt/pic32mx/lib/libc.a(_iob.o)
                0xa00001f0                _outdone
 *fill*         0xa00001f1        0x3 00
 .scommon       0xa00001f4        0x4 /opt/pic32mx/lib/libc.a(errno.o)
                0xa00001f4                errno
 .scommon       0xa00001f8        0x4 /opt/pic32mx/lib/libc.a(tfiles.o)
                0xa00001f8                _tfilesptr
                0xa00001fc                _sbss_end = .

.bss            0xa00001fc      0x170
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0xa00001fc      0x100 rmi-mr32.o
 .bss           0xa00002fc       0x18 /opt/pic32mx/lib/libc.a(sbrk.o)
 *(COMMON)
 COMMON         0xa0000314       0x18 rmi-mr32.o
                0xa0000314                analogSensors
 COMMON         0xa000032c       0x40 /opt/pic32mx/lib/libc.a(_iob.o)
                0xa000032c                _sibuf
                0xa000034c                _sobuf
                0xa000036c                . = ALIGN (0x4)
                0xa000036c                . = ALIGN (0x4)
                0xa000036c                _end = .
                0xa000036c                _bss_end = .

.persist        0xa000036c        0x0
 *(.persist)
                0xa000036c                . = ALIGN (0x4)

.heap           0xa000036c        0x0
                0xa000036c                _heap = .
                0xa000036c                . = (. + _min_heap_size)

.stack          0xa0000370     0x2000
                0xa0000370                _splim = .
                0xa0000370                _SPLIM = .
                0xa0002370                . = (. + _min_stack_size)
 *fill*         0xa0000370     0x2000 00

.ramfunc        0xa0002800        0x0 load address 0x9d0057dc
                0xa0002800                _ramfunc_begin = .
 *(.ramfunc .ramfunc.*)
                0xa0002800                . = ALIGN (0x4)
                0xa0002800                _ramfunc_end = .
                0x9d0057dc                _ramfunc_image_begin = LOADADDR (.ramfunc)
                0x00000000                _ramfunc_length = SIZEOF (.ramfunc)
                0x00002800                _bmxdkpba_address = (_ramfunc_begin - 0xa0000000)
                0x00020000                _bmxdudba_address = 0x20000
                0x00020000                _bmxdupba_address = 0x20000
                0xa0020000                _stack = (_ramfunc_length > 0x0)?(_ramfunc_begin - 0x4):0xa0020000
                0x00000001                ASSERT (((_min_stack_size + _min_heap_size) <= (_stack - _heap)), Not enough space to allocate both stack and heap.  Reduce heap and/or stack size.)

.pdr            0x00000000      0x600
 *(.pdr)
 .pdr           0x00000000       0x20 rmi_example.o
 .pdr           0x00000020      0x380 rmi-mr32.o
 .pdr           0x000003a0       0x40 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .pdr           0x000003e0       0x20 /opt/pic32mx/lib/libc.a(exit.o)
 .pdr           0x00000400       0x20 /opt/pic32mx/lib/libc.a(stdclean.o)
 .pdr           0x00000420       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .pdr           0x00000440       0x20 /opt/pic32mx/lib/libc.a(fclose.o)
 .pdr           0x00000460       0x20 /opt/pic32mx/lib/libc.a(fflush.o)
 .pdr           0x00000480       0x40 /opt/pic32mx/lib/libc.a(buf.o)
 .pdr           0x000004c0       0xa0 /opt/pic32mx/lib/libc.a(sbrk.o)
 .pdr           0x00000560       0x20 /opt/pic32mx/lib/libc.a(write.o)
 .pdr           0x00000580       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .pdr           0x000005a0       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .pdr           0x000005c0       0x20 /opt/pic32mx/lib/libc.a(memset.o)
 .pdr           0x000005e0       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.reginfo        0x00000000       0x18
 *(.reginfo)
 .reginfo       0x00000000       0x18 rmi_example.o

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000      0x60b
 *(.comment)
 .comment       0x00000000       0x4d rmi_example.o
 .comment       0x0000004d       0x4d rmi-mr32.o
 .comment       0x0000009a       0x4d /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .comment       0x000000e7       0x4d /opt/pic32mx/lib/libc.a(exit.o)
 .comment       0x00000134       0x4d /opt/pic32mx/lib/libc.a(stdclean.o)
 .comment       0x00000181       0x4d /opt/pic32mx/lib/libc.a(_exit.o)
 .comment       0x000001ce       0x4d /opt/pic32mx/lib/libc.a(_iob.o)
 .comment       0x0000021b       0x4d /opt/pic32mx/lib/libc.a(fclose.o)
 .comment       0x00000268       0x4d /opt/pic32mx/lib/libc.a(fflush.o)
 .comment       0x000002b5       0x4d /opt/pic32mx/lib/libc.a(buf.o)
 .comment       0x00000302       0x4d /opt/pic32mx/lib/libc.a(errno.o)
 .comment       0x0000034f       0x4d /opt/pic32mx/lib/libc.a(tfiles.o)
 .comment       0x0000039c       0x98 /opt/pic32mx/lib/libc.a(sbrk.o)
 .comment       0x00000434       0x4d /opt/pic32mx/lib/libc.a(write.o)
 .comment       0x00000481       0x4d /opt/pic32mx/lib/libc.a(remove.o)
 .comment       0x000004ce       0x4d /opt/pic32mx/lib/libc.a(close.o)
 .comment       0x0000051b       0x56 /opt/pic32mx/lib/libc.a(memset.o)
 .comment       0x00000571       0x4d /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .comment       0x000005be       0x4d /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x1e0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x28 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_aranges
                0x00000028       0x28 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_aranges
                0x00000050       0x28 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_aranges
                0x00000078       0x28 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_aranges
                0x000000a0       0x28 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_aranges
                0x000000c8       0x30 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_aranges
                0x000000f8       0x48 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_aranges
                0x00000140       0x28 /opt/pic32mx/lib/libc.a(write.o)
 .debug_aranges
                0x00000168       0x28 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_aranges
                0x00000190       0x28 /opt/pic32mx/lib/libc.a(close.o)
 .debug_aranges
                0x000001b8       0x28 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_pubnames
                0x00000000      0x25b
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b /opt/pic32mx/lib/libc.a(exit.o)
 .debug_pubnames
                0x0000001b       0x2e /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_pubnames
                0x00000049       0x1c /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_pubnames
                0x00000065       0x49 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_pubnames
                0x000000ae       0x1d /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_pubnames
                0x000000cb       0x1d /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_pubnames
                0x000000e8       0x2c /opt/pic32mx/lib/libc.a(buf.o)
 .debug_pubnames
                0x00000114       0x1c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_pubnames
                0x00000130       0x21 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_pubnames
                0x00000151       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_pubnames
                0x000001c5       0x1c /opt/pic32mx/lib/libc.a(write.o)
 .debug_pubnames
                0x000001e1       0x1d /opt/pic32mx/lib/libc.a(remove.o)
 .debug_pubnames
                0x000001fe       0x1c /opt/pic32mx/lib/libc.a(close.o)
 .debug_pubnames
                0x0000021a       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_pubnames
                0x0000023a       0x21 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_info     0x00000000      0xdc0
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000       0x6a /opt/pic32mx/lib/libc.a(exit.o)
 .debug_info    0x0000006a      0x13f /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_info    0x000001a9       0x4a /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_info    0x000001f3      0x150 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_info    0x00000343      0x162 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_info    0x000004a5       0xf1 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_info    0x00000596      0x145 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_info    0x000006db       0x3f /opt/pic32mx/lib/libc.a(errno.o)
 .debug_info    0x0000071a      0x127 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_info    0x00000841      0x282 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_info    0x00000ac3       0x7c /opt/pic32mx/lib/libc.a(write.o)
 .debug_info    0x00000b3f       0xa9 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_info    0x00000be8       0x9e /opt/pic32mx/lib/libc.a(close.o)
 .debug_info    0x00000c86       0xfb /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_info    0x00000d81       0x3f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_abbrev   0x00000000      0x861
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x60 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_abbrev  0x00000060       0xbd /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_abbrev  0x0000011d       0x41 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_abbrev  0x0000015e       0x81 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_abbrev  0x000001df       0xcc /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_abbrev  0x000002ab       0x80 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_abbrev  0x0000032b      0x109 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_abbrev  0x00000434       0x30 /opt/pic32mx/lib/libc.a(errno.o)
 .debug_abbrev  0x00000464       0x90 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_abbrev  0x000004f4      0x153 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_abbrev  0x00000647       0x73 /opt/pic32mx/lib/libc.a(write.o)
 .debug_abbrev  0x000006ba       0x7f /opt/pic32mx/lib/libc.a(remove.o)
 .debug_abbrev  0x00000739       0x6f /opt/pic32mx/lib/libc.a(close.o)
 .debug_abbrev  0x000007a8       0x89 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_abbrev  0x00000831       0x30 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_line     0x00000000     0x1800
 *(.debug_line)
 .debug_line    0x00000000      0x19d /opt/pic32mx/lib/libc.a(exit.o)
 .debug_line    0x0000019d      0x1b9 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_line    0x00000356       0x9e /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_line    0x000003f4      0x196 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_line    0x0000058a      0x1ec /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_line    0x00000776      0x1e4 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_line    0x0000095a      0x258 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_line    0x00000bb2      0x17c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_line    0x00000d2e      0x198 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_line    0x00000ec6      0x3c3 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_line    0x00001289       0xc2 /opt/pic32mx/lib/libc.a(write.o)
 .debug_line    0x0000134b      0x1aa /opt/pic32mx/lib/libc.a(remove.o)
 .debug_line    0x000014f5      0x1a9 /opt/pic32mx/lib/libc.a(close.o)
 .debug_line    0x0000169e       0xd3 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_line    0x00001771       0x8f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_frame    0x00000000      0x230
 *(.debug_frame)
 .debug_frame   0x00000000       0x2c /opt/pic32mx/lib/libc.a(exit.o)
 .debug_frame   0x0000002c       0x30 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_frame   0x0000005c       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_frame   0x0000007c       0x30 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_frame   0x000000ac       0x2c /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_frame   0x000000d8       0x38 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_frame   0x00000110       0x8c /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_frame   0x0000019c       0x34 /opt/pic32mx/lib/libc.a(write.o)
 .debug_frame   0x000001d0       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_frame   0x000001f0       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .debug_frame   0x00000210       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_str      0x00000000      0x9af
 *(.debug_str)
 .debug_str     0x00000000       0xd6 /opt/pic32mx/lib/libc.a(exit.o)
                                 0xef (size before relaxing)
 .debug_str     0x000000d6       0xd4 /opt/pic32mx/lib/libc.a(stdclean.o)
                                0x157 (size before relaxing)
 .debug_str     0x000001aa       0x74 /opt/pic32mx/lib/libc.a(_exit.o)
                                 0xc2 (size before relaxing)
 .debug_str     0x0000021e       0x89 /opt/pic32mx/lib/libc.a(_iob.o)
                                0x14f (size before relaxing)
 .debug_str     0x000002a7       0x8d /opt/pic32mx/lib/libc.a(fclose.o)
                                0x14e (size before relaxing)
 .debug_str     0x00000334       0x74 /opt/pic32mx/lib/libc.a(fflush.o)
                                0x135 (size before relaxing)
 .debug_str     0x000003a8       0xbc /opt/pic32mx/lib/libc.a(buf.o)
                                0x152 (size before relaxing)
 .debug_str     0x00000464       0x6c /opt/pic32mx/lib/libc.a(errno.o)
                                 0xb9 (size before relaxing)
 .debug_str     0x000004d0       0x6d /opt/pic32mx/lib/libc.a(tfiles.o)
                                0x147 (size before relaxing)
 .debug_str     0x0000053d      0x101 /opt/pic32mx/lib/libc.a(sbrk.o)
                                0x19d (size before relaxing)
 .debug_str     0x0000063e       0x82 /opt/pic32mx/lib/libc.a(write.o)
                                 0xd6 (size before relaxing)
 .debug_str     0x000006c0       0xdd /opt/pic32mx/lib/libc.a(remove.o)
                                0x16e (size before relaxing)
 .debug_str     0x0000079d       0xc2 /opt/pic32mx/lib/libc.a(close.o)
                                0x160 (size before relaxing)
 .debug_str     0x0000085f       0xe1 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                                0x13a (size before relaxing)
 .debug_str     0x00000940       0x6f /opt/pic32mx/lib/libc.a(c32_uart.o)
                                 0xc1 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo  0x00000000    0x14835
 *(.debug_macinfo)
 .debug_macinfo
                0x00000000      0xbb6 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_macinfo
                0x00000bb6     0x1e47 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_macinfo
                0x000029fd      0x92f /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_macinfo
                0x0000332c     0x1e4e /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_macinfo
                0x0000517a     0x1e6a /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_macinfo
                0x00006fe4     0x1e59 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_macinfo
                0x00008e3d     0x23b5 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_macinfo
                0x0000b1f2      0xdbb /opt/pic32mx/lib/libc.a(errno.o)
 .debug_macinfo
                0x0000bfad     0x1e47 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_macinfo
                0x0000ddf4     0x1199 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_macinfo
                0x0000ef8d      0x92f /opt/pic32mx/lib/libc.a(write.o)
 .debug_macinfo
                0x0000f8bc     0x1e47 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_macinfo
                0x00011703     0x1e47 /opt/pic32mx/lib/libc.a(close.o)
 .debug_macinfo
                0x0001354a      0x9bc /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_macinfo
                0x00013f06      0x92f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

/DISCARD/
 *(.note.GNU-stack)
OUTPUT(rmi_example.elf elf32-tradlittlemips)

.mdebug.abi32   0x9d0057dc        0x0

.rel.dyn        0x9d0057dc        0x0

.debug_ranges   0x9d0057dc       0x18
 .debug_ranges  0x9d0057dc       0x18 /opt/pic32mx/lib/libc.a(fclose.o)
